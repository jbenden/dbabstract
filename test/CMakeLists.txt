#if (test)
enable_testing()
if (MYSQL_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_MYSQL")
    set(STATIC_LIBS "../dbabstract/mysql/libmysql_dba.a -lmysqlclient")
else()
    MESSAGE(STATUS "MySQL will not be linked to test binary.")
endif()
if (SQLITE_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_SQLITE3")
    if (STATIC_LIBS)
        set(STATIC_LIBS "../dbabstract/sqlite3/libsqlite3_dba.a -lsqlite3 ${STATIC_LIBS}")
    else()
        set(STATIC_LIBS "../dbabstract/sqlite3/libsqlite3_dba.a -lsqlite3")
    endif()
else()
    MESSAGE(STATUS "SQLite3 will not be linked to test binary.")
endif()
if (PQ_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_PQ")
    if (STATIC_LIBS)
        set(STATIC_LIBS "${STATIC_LIBS} ../dbabstract/pq/libpq_dba.a -lpq")
    else()
        set(STATIC_LIBS "../dbabstract/pq/libpq_db.a -lpq")
    endif()
else()
    MESSAGE(STATUS "PostgreSQL will not be linked to test binary.")
endif()
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DLIBPATH=\\\"${CMAKE_INSTALL_PREFIX}/lib\\\"")
add_executable(test_db test_db.cpp)
target_link_libraries(test_db PocoFoundation)
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${STATIC_LIBS}")
add_test(NAME mytest COMMAND test_db)
#install(TARGETS test_db DESTINATION bin)

#endif()
