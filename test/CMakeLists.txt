#if (test)
enable_testing()
if (MYSQL_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_MYSQL")
else()
    MESSAGE(STATUS "MySQL will not be linked to test binary.")
endif()
if (SQLITE_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_SQLITE3")
else()
    MESSAGE(STATUS "SQLite3 will not be linked to test binary.")
endif()
if (PQ_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_PQ")
else()
    MESSAGE(STATUS "PostgreSQL will not be linked to test binary.")
endif()
if (ODBC_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DENABLE_ODBC")
else()
    MESSAGE(STATUS "ODBC will not be linked to test binary.")
endif()
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DLIBPATH=\\\"${CMAKE_INSTALL_PREFIX}/lib\\\"")
include_directories("${CMAKE_SOURCE_DIR}/gtest-1.7.0/include")

add_executable(tests mysql_tests.cpp sqlite3_tests.cpp pq_tests.cpp odbc_tests.cpp)
target_link_libraries(tests gtest_main)
target_link_libraries(tests PocoFoundation)
if (MYSQL_FOUND)
    target_link_libraries(tests mysql_dba_static)
endif()
if (SQLITE_FOUND)
    target_link_libraries(tests sqlite3_dba_static)
endif()
if (PQ_FOUND)
    target_link_libraries(tests pq_dba_static)
endif()
if (ODBC_FOUND)
    target_link_libraries(tests odbc_dba_static)
endif()
add_test(AllTests tests)

add_executable(test_db test_db.cpp)
target_link_libraries(test_db PocoFoundation)
if (MYSQL_FOUND)
    target_link_libraries(test_db mysql_dba_static)
endif()
if (SQLITE_FOUND)
    target_link_libraries(test_db sqlite3_dba_static)
endif()
if (PQ_FOUND)
    target_link_libraries(test_db pq_dba_static)
endif()
if (ODBC_FOUND)
    target_link_libraries(test_db odbc_dba_static)
endif()
add_test(NAME coverage COMMAND tests static)
#install(TARGETS test_db DESTINATION bin)

#endif()
